// <auto-generated />
using Gambl.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gambl.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241221130440_InstructorsExplain")]
    partial class InstructorsExplain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Gambl.Models.ContentInfo", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LessonInfoLessonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContentId");

                    b.HasIndex("LessonInfoLessonId");

                    b.ToTable("ContentInfos");
                });

            modelBuilder.Entity("Gambl.Models.CourseBuy", b =>
                {
                    b.Property<int>("CourseSignUpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseSignUpId");

                    b.ToTable("CourseBuys");
                });

            modelBuilder.Entity("Gambl.Models.CourseInfo", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseCategory")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseExplain")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("CourseImage")
                        .HasColumnType("BLOB");

                    b.Property<string>("CourseInstructor")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseName")
                        .HasColumnType("TEXT");

                    b.Property<int>("CoursePay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseState")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InstructorCoursesViewModelInstructorsCoursesId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseId");

                    b.HasIndex("InstructorCoursesViewModelInstructorsCoursesId");

                    b.HasIndex("InstructorId");

                    b.ToTable("CourseInfos");
                });

            modelBuilder.Entity("Gambl.Models.InstructorCoursesViewModel", b =>
                {
                    b.Property<int>("InstructorsCoursesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstructorsCoursesId");

                    b.HasIndex("InstructorId");

                    b.ToTable("InstructorCourses");
                });

            modelBuilder.Entity("Gambl.Models.InstructorInfo", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstructorEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstructorExplain")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstructorFN")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("InstructorImage")
                        .HasColumnType("BLOB");

                    b.Property<string>("InstructorLN")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstructorPhone")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId");

                    b.ToTable("InstructorInfos");
                });

            modelBuilder.Entity("Gambl.Models.LessonInfo", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LessonName")
                        .HasColumnType("TEXT");

                    b.HasKey("LessonId");

                    b.ToTable("LessonInfos");
                });

            modelBuilder.Entity("Gambl.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserFN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserLN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("Gambl.Models.ContentInfo", b =>
                {
                    b.HasOne("Gambl.Models.LessonInfo", null)
                        .WithMany("content")
                        .HasForeignKey("LessonInfoLessonId");
                });

            modelBuilder.Entity("Gambl.Models.CourseInfo", b =>
                {
                    b.HasOne("Gambl.Models.InstructorCoursesViewModel", null)
                        .WithMany("Courses")
                        .HasForeignKey("InstructorCoursesViewModelInstructorsCoursesId");

                    b.HasOne("Gambl.Models.InstructorInfo", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Gambl.Models.InstructorCoursesViewModel", b =>
                {
                    b.HasOne("Gambl.Models.InstructorInfo", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Gambl.Models.InstructorCoursesViewModel", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Gambl.Models.InstructorInfo", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Gambl.Models.LessonInfo", b =>
                {
                    b.Navigation("content");
                });
#pragma warning restore 612, 618
        }
    }
}
